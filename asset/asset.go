// Code generated for package asset by go-bindata DO NOT EDIT. (@generated)
// sources:
// Res/cert.pem
// Res/google.js
// Res/google_news.js
// Res/js_text.js
// Res/key.pem
// Res/node-x.ini
package asset

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

// Name return file name
func (fi bindataFileInfo) Name() string {
	return fi.name
}

// Size return file size
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}

// Mode return file mode
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}

// Mode return file modify time
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}

// IsDir return file whether a directory
func (fi bindataFileInfo) IsDir() bool {
	return fi.mode&os.ModeDir != 0
}

// Sys return file is sys mode
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _resCertPem = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x94\xc9\xee\xaa\x48\x18\x47\xf7\x3c\x45\xef\x49\x47\x26\x15\x96\x55\x4c\x16\x52\x48\x21\xf3\x0e\x99\x94\x41\x46\x41\x78\xfa\xce\xfd\xa7\x6f\xd2\x49\xe7\x7e\xcb\x93\xb3\x3b\xf9\x7e\x7f\xff\x3a\xa8\xea\xc8\xfa\x4b\x56\x1d\x17\x69\x48\x06\xae\xfa\x43\x29\x8c\x90\x2c\xb8\xb2\x0c\xd2\xb6\x04\x2b\x82\xa0\x44\x5e\xcc\x8f\xc9\x2d\x9c\x24\xd0\x25\x23\x6c\x66\x88\x33\x19\xa9\x88\x39\xb1\x76\xba\x2a\x24\x32\xae\x5d\x8c\x9e\x4b\x6a\x01\xa2\x9a\x14\x24\x60\x05\x0a\xc8\xb5\x95\xd9\x2c\x45\xfd\x62\xc5\x5b\xf1\x8e\x18\xbc\x37\x89\xb6\x32\xbb\xa5\x00\xe1\xbf\x0c\x03\xb0\x96\xa5\xfa\xc2\x80\xd1\xe5\xfb\xa0\x53\x77\xf4\xe0\x15\xa2\x42\x40\x3c\x00\x04\x04\x95\xf5\x47\xb8\x82\x0e\x41\x40\x14\xf3\x94\xdf\x9c\xa6\x2a\xa4\x59\xd3\xee\xf0\x68\xdd\x44\x64\xd4\xdc\x87\x25\xdd\xe7\xc3\x14\x64\xc2\x94\x79\x3d\xa7\x61\x52\xf7\x73\x2f\x9d\xb7\x7a\xc8\x54\x6d\x4f\xe7\x41\x22\x58\x89\x18\xf9\xeb\x27\xfc\x27\xf1\x0f\xcc\x31\x63\xaf\xef\x26\xf5\x9a\xfe\x9e\xfb\xf7\x87\xa0\xe7\xa3\x9e\xd6\xb2\x01\xde\xd4\xca\x0a\x9e\x61\xcf\x2b\x5e\xdf\xfa\x15\xb7\x05\xcb\xf1\xd9\x58\xd8\xbb\xfc\x24\x0d\x27\x7e\xf8\xed\x74\x65\xfd\x57\x36\x86\xfa\x5e\x68\x0b\x90\x73\x78\x29\xba\x05\x8b\x3a\xa6\xb9\xd8\x8f\x6b\x2a\x94\x16\xd6\xf1\x3e\x91\xc0\xeb\xd7\x44\x61\xe5\xc4\xa2\xbb\x0f\x7e\xc4\x47\xa5\x13\x66\x72\xbb\x08\x7a\xb7\xc4\x8f\x51\x7e\xac\xa7\xce\xcb\x2b\x93\xae\xc0\x34\x4d\x83\x4f\xe6\xea\x66\xb5\xa7\x89\x0a\xa7\x55\x94\x8e\x5f\x8f\xef\x90\x87\xcc\xf4\x8c\x9a\xef\x1e\xc6\xfe\x6b\x98\xf2\xd4\xec\x65\xfa\x73\x7c\x25\x80\x30\xb5\x11\xa8\xe3\x26\x5a\xd6\x97\xab\xdc\xde\x3f\x45\x87\x9e\x7b\x1b\x61\xda\x53\xdc\x37\x3c\x3b\xdf\xe6\x6d\x54\x4c\xf8\x11\x1b\xfa\x6e\x5e\x34\xa7\x7a\x99\xe8\x54\x7e\x83\x85\x66\xc4\xcb\x18\x18\x4b\xf8\x01\xda\x05\x91\x62\x58\x4c\x14\x2d\xa0\xc4\x10\x00\xbd\xf2\x76\xe8\x50\x18\x32\x3a\x60\xbd\x4c\x29\x49\x00\xa1\x6b\x1d\xea\xa8\xab\x44\xc9\xea\x57\x13\xb3\x23\x7f\x0e\x6e\xf2\xad\xd0\xba\xc5\xa8\x40\x01\x4b\xcb\xbf\xdc\xb1\xaa\x2b\x20\x28\xff\x75\xa9\x3f\xc8\xf6\x8f\xec\x60\x08\x0a\x51\x85\x2e\x50\x00\xb9\x1c\x7e\xb7\xff\x9d\x5e\x5e\x3d\x40\xfd\x6a\x0f\x08\x14\x65\xc0\x18\x87\x66\x3f\x37\x17\xa7\xcb\x13\x5e\xf1\xca\x93\x56\x8f\xe7\xbd\x8e\xcd\xc6\x48\x8f\xa8\xd7\xa7\x39\xda\x5a\xa3\xe4\xa2\xb5\x46\xd2\x63\x34\x9f\x4e\xc3\xa9\x31\xd5\x02\xc7\x28\xd8\x8b\xfa\xb6\x02\x2e\x57\x53\x87\x88\x0d\x63\x9f\x9f\x87\x2e\xc3\xd1\x36\x7b\xa5\x53\x2f\xe5\x29\x20\xce\x95\xf6\x8d\xd7\x54\x72\x9d\x2a\xb5\x29\x76\x9f\xc7\xca\x16\xa4\xd4\x8a\xa9\x16\x9e\xce\xe2\x77\x50\xd7\xaa\xca\x53\xbe\xdc\xc7\xe3\x9a\x1d\x7c\x61\x8f\x27\x9b\x63\xe2\x03\xc9\xf7\xe7\x20\x99\xd0\x1d\xb5\x6c\x4f\x0f\xc0\x42\xed\x21\x93\xd2\x93\xd8\x48\xd7\xa9\x8b\x5f\x67\x8a\x8f\x82\xb6\x77\x8d\x8b\xe8\x59\xb9\xaf\x2c\x73\x1a\x72\x4f\xda\xd6\x75\x99\xf6\xd8\x9b\x61\x3b\xdc\x23\xdc\xde\xd1\x6b\x0a\x0d\xb0\x84\xfd\x38\x30\x62\xae\x1d\xc5\x5e\x0b\x8e\x85\xd3\x4e\xf3\x97\x4a\x5e\x57\x5f\x40\xf2\xd6\xfb\x3b\x31\x61\x46\x17\x2e\x43\x9c\x17\xc6\xfe\xf6\xde\x87\x44\x0f\x0c\x89\x1b\xc0\x46\x1f\x88\xdf\x6d\xa2\xe3\xef\x34\x6e\x33\x7e\xc1\xa4\x6a\xb1\x9b\xcc\xc1\x9d\x8a\xaa\xca\x67\x8e\xbb\x91\xba\xcd\xa0\x07\x8b\x90\xf0\x0a\x79\x44\xb6\x3d\x7a\xbd\x46\xfd\x7c\xbc\x6a\x29\xff\x5f\x81\x7f\x02\x00\x00\xff\xff\x72\xa6\x27\xae\x22\x04\x00\x00")

func resCertPemBytes() ([]byte, error) {
	return bindataRead(
		_resCertPem,
		"Res/cert.pem",
	)
}

func resCertPem() (*asset, error) {
	bytes, err := resCertPemBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "Res/cert.pem", size: 1058, mode: os.FileMode(420), modTime: time.Unix(1730777079, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _resGoogleJs = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x54\xdf\x4b\x1b\x4b\x14\x7e\xf7\xaf\x38\xe6\x41\x77\x21\xec\x5e\xf0\xcd\xb0\xc2\x45\x7c\xb8\x97\x4b\xae\xb4\x7d\x50\x4a\x29\x43\x72\xd6\x5d\x98\xec\x86\xd9\xb3\xfe\xa0\x04\xac\xf8\x23\x8a\x96\xbe\x54\xac\x48\x2b\x94\xfa\x54\xab\x4f\xad\x62\xe9\x5f\xe3\x4e\xea\x53\xff\x85\x32\x33\xdb\x24\x6b\x92\xe2\x3c\x64\x73\xe6\xfb\xce\x37\xdf\x99\x39\x33\x75\x46\x0c\xbc\x19\x78\x31\x06\x00\xc0\x91\x60\xa1\xc9\x28\x00\x0f\x2c\xf5\x2d\x03\x72\xf4\xa2\x94\xf3\x32\xf8\x21\x27\x14\x3a\xb0\xbd\x19\x93\xa0\x46\xe8\x83\x85\x1c\xc1\xf3\x40\x63\x3d\x44\x0d\x8d\x40\x3d\xae\xa5\x0d\x8c\xa8\xd2\xc5\x5a\xdd\x7f\xcb\x4c\x80\xc0\x24\xe5\xd4\x47\x74\x70\x99\xf1\x94\x11\xf6\x6c\x94\xc1\xf8\x58\x98\x67\x14\x3c\xd2\x09\xce\xdf\xd5\xc5\xe7\x4f\x16\xe7\xe7\x0c\x66\x57\x0a\xa2\x51\x5c\xc7\x04\x3c\x78\xfa\x6c\x70\x1e\xbc\x7c\x4d\x27\x24\x14\x8c\xb0\x8a\xab\x64\xf5\x09\xb8\x2e\xdc\xbd\x3c\xc8\x5e\x6d\xcb\xdd\x75\x79\xb2\x9b\xed\x5f\xdf\x6d\x1d\x74\x8e\x37\x7f\xec\x6d\x74\x36\xae\xbb\xb4\x95\x20\xe4\x08\x96\x92\xb4\xa1\x58\xb9\xeb\x82\xfc\xb0\x2e\xdf\x7f\xec\xb4\xbf\x98\x2c\x79\x74\x91\xbd\x3e\x93\x47\x17\x49\x4d\x84\x4d\x92\xed\xc3\x84\xd6\x38\xca\xd3\x9d\xce\xf9\xf7\x42\xae\xb2\xd9\x64\x02\x23\xb5\x27\x4a\xdc\x31\x51\x35\xae\x63\xa5\xc0\x54\xbb\x9f\x33\x27\x26\xf2\x1c\x87\xd8\x52\x95\x35\xd0\xa1\xf8\xbf\x78\x05\xc5\x2c\x4b\xd0\xb2\x61\xdc\xf3\x60\xd2\x2c\x3d\xf9\x40\xb2\xb2\x37\x79\xbf\xb0\xbc\xb8\xec\x6c\x43\xbe\x3b\xb9\xbd\x3a\x90\x47\x17\x3f\xbf\xed\x67\xed\xb7\xd9\xe5\xb6\x3c\xdc\x91\x27\x9f\x4c\xb9\x9d\xe3\xcd\x6c\x7b\x2b\xfb\x7c\x2d\xbf\xde\x64\x7b\xa7\x59\xfb\x52\xbe\xb9\xec\xdc\x6c\xde\x5e\x9d\x0f\xe8\xa9\x32\x74\x9d\x84\xab\x34\x1b\x47\xa4\x9d\x89\xb0\x61\xd9\x0e\xc7\x68\x89\x02\x98\x81\xbf\xec\x41\x23\xbf\x93\x4d\x77\xc2\xb8\x69\x42\x55\x1e\xad\x35\x31\xf6\x73\xc0\x56\xed\x59\xf2\xd3\xa8\x46\x61\x1c\x95\x46\x08\x15\xc5\xcc\xa9\xfe\x81\xaa\x86\x6e\x32\xa7\x99\x26\x81\xa1\x57\x46\xb2\x5b\x43\x91\x16\xf2\x04\x47\x2f\xf1\x30\xf9\x41\xe9\x11\xb2\x45\x62\x31\x7a\xd0\xb5\xe8\xa5\x08\xa4\x54\x44\xc6\xe0\x98\x81\xba\x6f\x08\x72\x7d\xf1\xf4\x53\x62\x95\x5c\xb7\x1e\x2e\xbb\x49\x93\x45\x2e\x73\x83\xa9\x92\xdd\xe5\x25\xc8\x44\x2d\xf8\x87\xb0\xd1\x7f\x4f\xfd\x58\x58\x0a\x0d\xa6\x20\xf6\xb5\x56\xdf\x19\x28\x80\x42\xd2\xaf\x4a\x30\x35\xa4\x5d\x2a\x05\x6a\x2a\xb8\x21\x9a\x66\x9f\xe3\xa8\x5f\x97\x40\xa0\x5f\x24\xd6\x31\xa9\x0d\x63\x16\xa3\x21\xdd\x29\xb0\xc9\x59\x0d\xad\x54\xf0\x72\xa9\xd4\x8b\xb5\x49\x3d\x33\xcc\x57\x48\xd8\x00\xef\xde\xc5\xd2\x29\xd3\xe6\x53\x2e\x20\xa9\xe0\xd3\xea\xa7\x38\xab\x3c\x4f\xeb\xdf\x21\xe7\xd3\xb7\xb7\xa6\x7f\xd4\x92\xb9\x0b\xc3\xca\x4f\xf0\xdf\xc7\xff\x57\x9d\x84\x44\x18\x2d\x85\xfe\x9a\xd5\x97\x67\x57\xc6\x5a\xbf\x02\x00\x00\xff\xff\xb9\x16\xae\x86\x21\x06\x00\x00")

func resGoogleJsBytes() ([]byte, error) {
	return bindataRead(
		_resGoogleJs,
		"Res/google.js",
	)
}

func resGoogleJs() (*asset, error) {
	bytes, err := resGoogleJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "Res/google.js", size: 1569, mode: os.FileMode(420), modTime: time.Unix(1717568138, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _resGoogle_newsJs = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x54\xcf\x4f\xdb\x48\x14\xbe\xf3\x57\x3c\x72\x00\x5b\xca\x3a\x2c\x62\x2f\xc9\x1a\xed\x0a\x71\xd8\xd5\x2a\x8b\x76\x7b\x00\x21\x54\x59\xf1\x33\x1e\x69\x62\x47\xe3\x71\x00\x55\x91\x28\xe2\x47\x40\x50\xf5\x52\x44\x11\x6a\x91\xaa\x72\x2a\x85\x53\x0b\xa2\xea\x5f\x83\x9d\x72\xea\xbf\x50\xcd\x4c\x9a\xc4\x38\x89\x5c\xb5\x52\x2d\x65\xe2\xf1\xf7\xbe\x6f\xde\x9b\xf9\xe6\xd9\x16\xb7\xc0\x9c\x86\x47\x23\x00\x00\x14\x39\xcc\xd7\x2c\xee\x82\x09\x9a\xf8\xcf\x03\x52\x34\xbd\x90\xd2\x3c\x38\x84\x72\x64\x72\xa2\x9b\xd3\x8a\x20\x1e\xe2\x80\x86\x14\xc1\x34\x41\x62\x5d\x44\x3c\x12\x01\xdb\xaf\x84\x55\xf4\x78\xa9\x83\x35\x3a\x6f\x75\x8b\x01\xc3\x20\xa4\xbc\x27\xd0\xc0\xba\x45\x43\x8b\x63\x37\x8d\x3c\xa8\x3c\xe6\xe7\x2c\xee\xfe\x27\x09\xc6\x9f\xe5\x85\x87\x0f\x16\xe6\x66\x15\xa6\x97\x12\xa2\x9e\x6f\x63\x00\x26\x2c\x2e\xa5\xbf\x83\xd9\x5e\xd3\x20\x1c\x99\xc5\xb1\x8c\xab\x5c\xeb\x11\x28\x14\xe0\xee\xf1\x41\xf4\x64\x3b\xde\x5d\x8f\x4f\x76\xa3\xfd\xeb\xbb\xad\x83\xd6\xf1\xe6\xa7\xbd\x8d\xd6\xc6\x75\x27\x6c\xc5\x25\x14\x41\x13\x92\x3a\x24\x2b\x2f\x14\x20\x7e\xb5\x1e\xbf\x7c\xdd\x6a\xbe\x53\xac\xf8\xe8\x22\x7a\x7a\x16\x1f\x5d\x04\x15\x46\x6a\x3c\x6e\x1e\x06\x7c\x8d\x62\x7c\xba\xd3\x3a\xff\x98\xe0\x8a\x34\x6b\x16\x43\x4f\xec\x89\x10\x37\xd4\xac\xec\xdb\x58\x4a\x44\x8a\xdd\x6f\x47\x8e\x8d\xb5\x39\x06\xb7\x96\xcb\x56\x15\x0d\xee\xff\xe3\xaf\x20\x9b\xb1\x02\xd4\x74\x18\x35\x4d\x18\x57\x4b\x8f\x67\x0c\x16\xe9\x8d\xdf\x2f\xac\x5d\x5c\x74\xb6\x11\xbf\x38\xb9\xbd\x3a\x88\x8f\x2e\x3e\x7f\xd8\x8f\x9a\xcf\xa3\xcb\xed\xf8\x70\x27\x3e\x79\xa3\xca\x6d\x1d\x6f\x46\xdb\x5b\xd1\xdb\xeb\xf8\xfd\x4d\xb4\x77\x1a\x35\x2f\xe3\x67\x97\xad\x9b\xcd\xdb\xab\xf3\x94\x9e\x28\x43\xd6\xc9\x71\x95\xcf\xf8\x1e\x97\x99\x31\x52\xd5\x74\x83\xa2\xb7\xcc\x5d\x98\x86\x09\x3d\x9d\xc8\x57\xb2\x72\x27\x8c\x2a\x13\x8a\xf2\xf8\x5a\x0d\x7d\xa7\x0d\xe8\xc2\x9e\x39\x27\xf4\x2a\x9c\xf8\x5e\x6e\x80\x50\x52\x4c\x9d\xea\x90\x50\xf1\x48\x93\x19\xb5\x30\x70\x55\x78\x69\x60\x74\xa3\x2f\xd2\x40\x1a\xe0\xe0\x25\xb2\xc9\xa7\xa5\x07\xc8\x26\x03\x93\xb3\x4c\xd7\xa2\x4b\x61\xc8\x43\xe6\xa9\x04\x47\x14\xd4\xe9\x21\x48\xe5\xc5\x93\xad\x44\xcb\x15\x0a\xd6\xe2\x1f\xa2\xd1\xfc\x52\x47\x7b\xa9\x60\x93\xba\xf8\xe5\xf4\x4e\x78\x80\x16\xab\xb8\x7f\x71\xac\xf6\x5e\x57\xc7\x67\x9a\x40\x6d\x52\x07\xdf\x91\x9a\x7a\xb2\xeb\xd8\xa4\x6e\x54\x5c\x42\x6d\x86\x5e\xd7\x25\x93\xe2\xf0\xfb\x41\xbf\xc3\x6f\xf7\x0e\x53\xc8\xd7\xfc\x40\x36\x9e\x1e\xc2\xe2\xc4\x52\x1f\x1f\x96\x52\x54\x4e\xb8\xea\x6e\xbd\xdc\x5f\xb3\x71\x43\x46\xdb\x4c\x75\x0d\x67\x29\xca\xbe\x97\x9c\xb9\x0c\x9d\x34\xd7\xb6\x78\x6a\xd9\xc9\xbe\xcb\x0a\x46\x8a\x4e\x38\x56\xc1\xec\x73\xa9\x65\x3d\x45\xf5\x97\x4f\xa1\x21\xa3\x45\x31\xa4\x11\xb1\x85\x45\x39\xa6\x31\x91\x6b\x51\x8e\xf9\x21\xde\xeb\x71\x80\x32\xbb\xc8\xf1\xde\xae\x75\x3d\x28\xbc\x3d\xc4\x00\x53\x7d\x4e\xf9\x7b\xb6\xfb\x27\x39\xc4\xc6\xa0\x92\xed\x94\x33\x19\x64\x2a\x1b\xf5\x87\x9b\x43\x94\x51\x94\x63\x76\x73\xc0\x10\x53\x7d\x9b\x71\xba\xd1\xc9\x17\xf5\xbd\xdd\xc3\xfe\xfe\xff\xdf\xb2\x11\x70\x46\xbc\x65\xe2\xac\x69\x3d\x9a\x7a\x69\xa4\xf1\x25\x00\x00\xff\xff\x34\x0c\x26\x14\x23\x09\x00\x00")

func resGoogle_newsJsBytes() ([]byte, error) {
	return bindataRead(
		_resGoogle_newsJs,
		"Res/google_news.js",
	)
}

func resGoogle_newsJs() (*asset, error) {
	bytes, err := resGoogle_newsJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "Res/google_news.js", size: 2339, mode: os.FileMode(420), modTime: time.Unix(1717552630, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _resJs_textJs = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x56\x4f\x6f\x1b\x45\x14\xbf\xfb\x53\xbc\xec\x21\x59\xd7\x61\xed\x04\x02\x04\x7b\x2d\x45\xa6\x87\x4a\x10\x2a\x28\x12\x55\x53\xac\x91\xfd\xd6\x9e\x30\xde\x59\xcd\xce\x36\xae\xa8\x0f\x15\x12\x14\x01\x15\x17\x0a\x82\x03\x1c\xa2\x72\x21\xe2\x8f\x38\x44\x51\x3f\x4e\x9c\x96\x53\xbf\x02\x9a\xd9\xf5\xee\x78\x67\x9d\xf6\x82\x84\x4f\xd9\x7d\xbf\xf7\x7e\xbf\xf7\x77\x33\x24\x92\x80\xdf\x85\x4f\x6b\x00\x00\x77\x88\x80\x69\x44\xe4\x18\x7c\x70\x9a\x4d\x89\x53\xe9\xd6\x9d\x76\x6e\x13\x18\x27\x4c\x82\x0f\x43\x3e\x48\x26\x18\x4a\x0f\xef\x10\x96\x10\x89\xae\x76\xdb\xcc\x0d\x9b\x10\x26\x8c\x6d\xc2\x47\xd7\x89\x1c\xbf\xaf\xdd\xbc\xbd\xfd\x9b\xfd\x1b\x37\xaf\x5f\x4d\x6d\xf5\x22\xac\xe2\x89\xc1\x87\x5b\xb7\x8b\x77\x21\x1f\x22\xf8\x19\xa3\x47\x25\x0a\x22\x71\x5f\x0b\x4a\x41\x0c\x25\x48\x2a\x19\x9a\x72\xf4\x0b\x4f\x0a\x3a\x31\x61\x8c\x86\x9f\x98\x28\xc6\x07\x44\x52\x1e\x7a\x63\x81\x41\x01\xa3\xc1\x61\x32\x89\xc0\x87\x80\xb0\x18\xdb\xb5\xc2\x10\x5f\x0d\x47\x8c\xc6\xe3\x77\xc9\x21\x17\x54\xde\x05\x1f\x62\x29\x8a\xba\x2d\x80\x98\xc2\x7a\x3c\x09\x55\x95\x5a\xed\x25\xeb\x60\x4c\x43\x8c\xb1\x64\xcd\x21\xcd\x26\xfc\x73\xff\x9b\xf9\xc3\xcf\xe7\x27\xdf\x3f\xfd\xed\xf1\xf9\xe9\x5f\xb9\x29\xe0\x02\x5c\xad\x44\xfb\x01\x85\x8e\x12\xe0\x31\x0c\x47\x72\xdc\x06\xda\x68\xd4\x0d\x29\x03\x1e\xc6\x8a\x8e\x88\x5e\x5a\x45\x85\x5d\x3c\xee\x49\x97\xd6\x6d\xea\xf9\x83\xe3\x8b\x47\x27\x29\xf5\xc5\x0f\xbf\xcf\xbf\x7d\x7c\x7e\x7a\xf6\xec\xab\x3f\x2f\x1e\x7d\x91\xbe\x7c\xfe\xe4\xc1\xfc\xe7\xb3\xf3\xb3\x87\x7b\x1f\xf4\xae\x5d\x7b\xfa\xcb\xfd\xe7\x4f\xbe\xcc\x03\xd0\x00\xdc\x9c\xaf\xeb\xc3\xeb\x3b\xb0\xbe\x5e\x28\xe8\xf8\xb0\xdb\x82\x7b\xf7\xc0\xc4\xec\xbe\x51\xc6\x6c\x6d\x6f\x9b\x69\xa8\x9f\x59\xd1\x46\xa3\xa8\xe7\xec\x85\xda\xcf\x4f\x4f\x6c\xed\x1f\x86\x74\xc0\x87\xf8\xec\xeb\xcf\xe6\x3f\xfd\x6d\x26\x80\x2c\x46\x2b\x8b\xd6\xf4\x35\x6c\xb5\xca\x2a\x5b\xd3\xdd\x80\xec\x94\x85\x9a\xcd\xad\x16\x3a\x5b\x51\xf3\xb4\xc8\xb9\xee\xf9\xf1\xaf\xf3\xe3\x1f\x2f\xbe\xfb\x23\x47\x0a\x94\x89\x08\x97\x87\xab\xbb\x44\x98\xd2\xa5\x04\x47\x63\xca\x10\x5c\xb5\x3f\xa6\x46\xb5\x53\x11\x11\xa8\x47\x4f\x19\xbd\xf4\x69\x9f\x0f\xb1\xbd\xd4\xc7\x0c\xb5\xbe\x9e\xc2\x24\x19\xed\x93\x09\xc2\x9a\x0f\x4e\x2c\xef\x32\x74\xaa\x4d\x03\x41\x23\xa9\x6d\x69\x80\x85\xd5\x93\xfc\x1d\x7e\x84\xa2\x47\x62\x74\xeb\xb0\xe6\xfb\xb0\x91\x82\x37\x5e\x12\xac\x48\x5f\x06\x0b\x0e\x0d\x04\x99\xa0\x53\xee\x8d\xca\x2a\x15\x8c\x53\xd9\xe3\xa1\xd4\x51\xf4\x91\xc8\x56\x08\xba\xb0\x53\x5f\x76\xca\x6f\xcc\x34\xaf\x98\xed\xde\xb6\x5c\xd4\xee\x71\x86\x1e\xe3\x23\xd7\x79\x1b\x09\xa3\xe1\xe8\x2d\x67\x53\x4e\x65\x05\x58\x1f\x3e\x2f\x4a\xe2\xf1\x2a\x7d\x15\x4e\xe5\x33\x65\xda\x66\x6a\x8e\xed\x3c\x54\x01\xd6\x32\xc7\x8a\x34\x0d\x19\xce\x41\xe8\x5c\xc6\x29\x45\x82\xb6\x79\x56\xab\x7e\x2a\xfe\x7a\xe1\x39\x9f\xe5\x97\x9f\x30\x76\x03\x75\xd1\x53\x5d\x87\x9c\x86\xee\xc6\x41\xb8\x91\x21\x23\x22\xc8\x48\x90\x68\xac\x3e\x19\x19\xd8\x8b\x23\x46\xa5\x52\xaf\xf4\x6b\x58\x12\x31\x4e\x86\xfd\xb4\x7d\x8e\xa3\xdf\x05\x5c\xb8\xd9\x07\x01\x81\x07\x46\x28\xa3\x2a\xaa\x58\x85\xf3\x62\x40\xd6\x7c\x68\x95\x4a\x67\x30\x34\x7c\x50\x95\xab\x48\x5c\xd1\x29\x1a\xf0\x35\xab\x27\x30\x62\x64\x80\x6e\xb3\x73\xeb\xe3\xee\xed\x2b\x5d\xef\x4a\xe7\xa0\xe9\x5d\xe9\x36\x47\x9b\xe0\x64\xd2\xa1\xd8\x44\xe2\xd1\x70\x88\xd3\xf7\x02\xd7\xe9\xe8\x45\x00\xa7\x0e\x5d\x78\x65\x0b\x4a\x62\x06\x3c\x94\x34\x4c\xb0\x42\x82\x1d\x33\xcb\xa9\x03\xdb\xad\x6c\xaf\x0c\x1e\x70\xea\x1d\x2b\xd7\x4b\xc2\xe7\x51\xb3\x8d\xca\x03\xa9\x56\x68\xad\xa5\x58\x55\x5d\x28\x1a\xe8\xd4\x2b\x26\x54\x71\x58\x5f\x61\x57\x05\xa8\x42\x2f\xea\x7e\xc4\xc5\x30\x5e\x14\x3e\x53\x97\xf1\x80\x51\xea\x32\x91\x76\x2b\x6a\xf4\xea\x0a\x86\xca\xb2\x98\xbf\x15\xcb\xb8\xf8\xd9\xe3\xd3\x30\x84\x56\x47\xb4\x37\x6f\x35\x87\x4a\x45\x07\x34\xbb\xfd\xbf\xce\xc5\x7a\xb3\xea\xac\xd8\x62\xac\x7b\x6f\xce\x79\xf5\x71\xaf\xd0\xac\x9c\x96\x39\xad\xf8\x33\xe3\x5a\x09\x24\xac\x1f\x11\xa1\x66\xcc\xb8\x18\xc6\x2d\xca\xaf\x11\x4f\x64\x94\xc8\xbe\xba\x68\xfd\x88\x8c\xd0\xbe\x49\xfa\x48\xf0\xa0\x08\x5a\x3a\x49\xf6\xf8\x2b\x8f\xf2\xf8\xe7\xa9\x17\x73\x5e\xf4\x7f\xab\xbc\xd5\xb0\xaa\xed\x2b\xda\x6d\x65\x61\x16\xae\xaa\xd9\xb3\xda\x65\x4d\xb3\xef\xd1\xd6\x9b\x55\x13\xfa\x1f\x4b\xac\x6e\xad\xfe\x9f\xab\x1c\xad\x36\xab\xfd\x1b\x00\x00\xff\xff\x4f\x6e\x4d\x1c\x32\x0d\x00\x00")

func resJs_textJsBytes() ([]byte, error) {
	return bindataRead(
		_resJs_textJs,
		"Res/js_text.js",
	)
}

func resJs_textJs() (*asset, error) {
	bytes, err := resJs_textJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "Res/js_text.js", size: 3378, mode: os.FileMode(420), modTime: time.Unix(1717569217, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _resKeyPem = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\xd5\xb7\x12\xab\xda\x01\x85\xe1\x9e\xa7\x38\x3d\xe3\x21\x0b\x28\x5c\x6c\x72\x46\x20\x40\x6c\x75\x20\x72\xce\x20\x9e\xde\xe3\x73\xcb\xbb\xca\x55\xfd\xdd\xf7\x9f\xff\x4f\x90\x55\xdd\xf9\xf3\xf4\xf5\x08\x04\xf2\x1f\x53\x86\x7f\x5f\xc4\xd6\x75\xf9\xf0\x74\x01\x48\xc0\x11\xca\x76\xae\xda\x5a\xe5\x4f\x5c\x00\x9e\xac\x00\xf0\x12\x05\xf3\x7b\x96\xe5\xab\x01\xa5\x0c\xc0\xa8\x0b\xc0\x93\xac\x47\xee\xfa\x5d\x53\xf0\x9b\xa2\xbc\x10\x81\x71\x5c\x4e\x37\x5a\x72\x27\xbc\x71\xdf\xf1\xc2\x5b\x6d\xcb\x64\xbf\x71\xd2\x4e\xdb\xc4\xb3\xbf\x76\xce\x64\xe5\xfe\x6e\x33\xef\xd9\x12\xc4\xc5\x2b\x4a\xa8\x3d\x89\x30\x9c\xc9\x08\x73\xe8\x90\x6f\xd8\x4d\xaf\x3c\x7a\xa5\xb4\x9a\x2f\xea\xb7\x15\x0d\x30\x9c\x04\x1d\x1a\xcf\xed\xb4\xcf\x41\x35\xed\xbe\x20\x48\x2a\x5b\x8a\xe7\x2d\x56\x5e\x47\x72\x3b\xf5\x7b\x98\x44\x54\x67\x4b\xac\xde\x05\xa2\x1c\x40\xcc\x05\xad\x18\x0f\x9b\x53\x6d\x94\xfc\x44\x9f\x36\xe6\x0f\xc2\x0f\x77\x48\x53\xaa\x99\x48\x84\x98\x38\xe8\xb8\xdb\xe9\x87\x91\x46\x7a\xf3\x5c\x8d\x56\xc7\xe3\x93\x2e\x62\x7a\x3e\x46\x24\xcc\x1b\x0b\x6d\xc0\xba\xae\x73\xe4\x6d\x8d\xeb\xf4\x8f\x35\x5e\x4f\x8e\x67\xae\x90\x1a\xf5\x50\xb7\xbe\xac\xde\x5d\x77\xfc\x89\xea\x79\xcd\xbf\xd6\x24\xa2\x3b\x53\x27\xc0\xc3\x5b\xe3\x2d\x2f\xc8\x8f\x73\x9c\x8b\x6c\x82\x29\x7a\x40\x6c\x22\x07\x23\xfe\x4e\xe4\x15\xb3\xfe\xd5\x0d\x46\x83\xc7\x3b\xd7\xa1\x2f\x4b\x53\xfc\xa6\xb6\xf4\x47\x79\xbd\x0f\x14\xe7\xb4\xe5\x6d\x1c\xf1\x0e\x14\x4d\x47\xbc\x62\x3e\x2c\x1d\x1e\xa0\xb4\x05\x00\x64\xb1\x2c\x65\xe0\x5d\xc9\xde\xce\xef\xfb\x6c\x96\x26\x18\x9e\x52\x0f\xed\xfb\x24\xd9\x55\x0c\xc9\x93\xdb\x59\x46\x80\x9f\x0e\x85\xc9\x61\x13\xde\x8a\x40\xc3\xb3\x0e\x35\xa4\x7e\x12\x3d\xcf\x3c\xe1\x91\x60\x8e\xf2\xca\x00\xca\xfd\x9e\xdf\xae\x78\x49\x3e\x4c\xe6\xcb\xd9\x1f\x1f\x23\x71\x7d\xdf\xc2\xf7\xb0\x7f\xeb\xac\xdc\xfe\xca\x62\x4f\xaa\x0b\xd1\xec\x75\xee\x8f\x8f\xc5\x44\xd1\xa8\x31\x27\xf6\xb2\x88\x89\x39\x7f\x6e\xfe\x65\xcb\x29\x2c\x05\x98\xfd\x4e\x65\xc0\xf2\x16\xa2\xbe\x89\x9b\xef\x4a\xd1\x5d\x4c\xb3\x89\xaf\xbf\x64\x9f\x9e\xd0\x11\xe0\xdc\x41\xe1\x56\x0e\xa4\x4f\xee\xca\xca\xd6\xf4\x52\xd4\x2d\x49\x27\xb6\xd3\x3d\x3e\x2a\x3b\x99\xbb\xd6\x92\x5e\x42\xb9\x0c\xfc\x31\xd7\x81\x17\xb7\x3b\xd9\xf4\xce\xd0\xe9\xe4\xb2\xb1\x2a\x42\x2b\x34\x43\xd3\xf7\x25\x67\x5d\xbe\x6c\xef\xc1\xf9\xb9\x18\x51\xd6\xd7\x7d\xa5\xb4\x80\x2e\x90\x68\x99\xe5\xa3\x59\xbb\x3a\xdf\x82\x2d\x5f\x69\xd1\x26\x52\xb6\x08\x11\xe1\xcd\xbf\xd9\x8a\x78\xe4\x0e\xf4\x8c\x79\x84\x9e\xac\xad\x93\x6d\x12\x70\xab\x95\xec\x06\x24\x5a\x75\x8f\x7b\x3f\xce\x8e\xe0\xe6\xd4\x4b\x1c\xcf\xf6\x4c\xa1\xf4\xa4\x21\x6f\x8d\x8a\x56\x0a\x2a\x1e\x26\x9a\x21\xf6\x09\x11\x42\xdd\x79\x26\x95\xcd\x2c\x31\xcf\x18\xa0\xc8\x27\x88\xa9\x41\x45\x54\xf2\x90\x52\x76\xc6\xca\x2f\xf2\xcc\x34\x70\x25\xec\x16\xbc\x78\x27\x0c\xd5\x3a\x4b\x5f\x0d\xa1\xaf\xc9\xf6\x01\x20\x44\x44\x7f\xef\x62\x92\x25\x29\x3e\xef\xd8\x42\xc6\x85\x40\xb3\x07\xd3\x5c\xee\xa1\x98\xc2\x47\xed\x40\xd1\x2e\xfb\x2b\x08\x7d\x7f\xf9\xbe\x3c\xf2\x19\xec\xd8\x77\xf1\x5b\x28\x25\x8b\xf9\xbb\xae\x0e\xd1\x1a\x68\x8c\x7c\x1f\x1a\x58\xc2\xd7\x5d\x53\x8c\x23\x1d\x92\xf6\x45\x37\xff\x24\x57\x95\xf0\x79\x9d\x41\x46\xa5\x05\x94\xd1\x52\x2c\x70\x2d\x8d\x13\x7d\xa3\x6e\x69\xaf\x1e\x33\xcf\x20\x29\x3a\x3c\x50\xfe\x5a\x0d\x60\xbd\x7c\x40\x85\x81\x7e\xec\x84\xcf\xbb\x18\x8f\xb6\xc9\x9d\x0a\x4e\xd6\xa3\x47\xbb\xc4\x24\x0a\x9b\x1c\xee\x67\xa6\xc4\x94\xb4\xa0\x11\x1d\xf7\x89\x3e\x8b\x26\xb2\xa6\xe7\x64\x80\x4d\xc5\xf3\xa4\x2c\xd8\x90\x7b\x84\x1c\xde\xca\xc7\xc4\x4e\x31\x21\xea\x75\x85\xc2\x98\xb0\x59\xea\xb0\x16\x3e\xe2\x61\x24\xf9\x11\xc1\xb0\xf3\xc0\xf8\x1f\xfb\x5c\x4f\x9e\x42\xc4\x5a\x42\xd9\xa3\x04\xf3\x69\x0a\xa5\xf4\x29\xb1\x8e\xd7\x50\xd7\x28\x45\x86\x94\x06\x5d\x6a\x0b\xe2\xd9\x62\x52\x8d\xcf\xbd\xbf\xd3\xf1\x2d\xcd\x2c\xc0\x54\xbd\xaa\x31\x3a\x5d\xf4\x5d\x13\x91\x2f\x41\x84\x47\x94\xe4\x94\xca\x09\x52\x20\x6c\x25\x09\x61\xb8\x2d\xcd\x65\x48\x4f\x2f\x8c\xee\xa5\x65\xa9\x50\x83\xfd\xc6\x33\x98\x4b\xb1\x95\x08\xe3\x85\x6f\xd6\x3d\x2c\xc2\x47\x56\x4e\x25\x12\x93\x80\x68\x86\xb5\x68\xdd\x67\xec\x7c\x2e\x43\x3c\xab\xb1\xcd\x44\x78\x45\x8b\x7a\x69\xd2\x4a\x62\x37\x76\x79\xbd\x63\xe6\x31\x61\x75\x2e\xeb\xaa\x64\x17\xda\xee\x05\x46\x15\x98\xcf\x99\x43\x26\x76\x75\x87\xa6\x3c\x35\x18\xb5\x79\x02\x25\xd0\xa3\x07\x27\x1f\x58\x55\x3d\x65\x18\x14\x3e\xcf\x27\xfb\xd0\x7a\x3a\x77\x27\xf2\xe8\x08\xab\x1a\x28\x9a\x29\xb2\x5f\x96\x7f\x60\x33\x39\xd5\xc8\x0a\xdc\x24\x10\x94\x6f\xc5\xb8\xfc\x4c\x0f\xe3\xfb\xf5\x1e\x38\x9b\xbf\xac\x9e\xce\x13\xe9\x1d\x71\x3a\x36\xd9\xe6\xe5\xe3\x51\x22\xb5\x4c\xca\x93\xd3\x54\x03\x3f\xeb\xef\xb1\xd5\xbe\x27\x6a\x20\x93\x4f\x9b\x8c\x71\x2b\x52\xf5\xa2\x13\x66\x40\x5d\x6a\x05\x52\xd5\xdc\x05\x1e\x3c\xea\x58\x2f\x8f\xcd\x6c\x18\xc5\x16\x4b\x28\x83\xa9\x96\x95\xf0\x79\x87\xae\xe6\x03\x22\x4c\x5f\x2d\x0d\x1b\xa4\xc0\x09\xa6\xd5\x9a\xd8\x7e\x4a\x9e\x2d\xb8\x9b\x81\xc7\x22\x5d\x74\xa3\xcd\x35\x36\xb3\xff\x98\x9a\x5a\x6f\x5e\x36\x61\xbf\x26\x67\x24\x75\x94\x7d\x14\xa3\x83\xe2\x69\x7a\x09\xac\xd7\xbd\x14\x24\x6c\x3f\x99\x97\x6e\xb4\xdb\xeb\x15\x53\x0a\x0f\x37\xd6\xf9\x63\xff\xbd\x61\xd7\x17\xdc\x68\xf6\xad\x7b\x1a\x2b\x7c\x6f\xfc\x67\x28\xe2\xfb\x92\x54\xdc\x3d\x5c\x12\x4f\xc5\xad\xe9\xe0\x95\x9c\x08\xf3\xfb\x8a\xe5\x5a\x6e\xe8\x2c\x55\xec\x60\x3e\x32\x9b\x22\x22\xfe\xfc\x2f\xf2\xd7\x1d\xd9\x91\xfe\x6d\xd1\xff\x02\x00\x00\xff\xff\x7d\x07\xf7\x79\xa8\x06\x00\x00")

func resKeyPemBytes() ([]byte, error) {
	return bindataRead(
		_resKeyPem,
		"Res/key.pem",
	)
}

func resKeyPem() (*asset, error) {
	bytes, err := resKeyPemBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "Res/key.pem", size: 1704, mode: os.FileMode(420), modTime: time.Unix(1730777079, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _resNodeXIni = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x90\xc1\x6a\x84\x30\x10\x86\xef\xf3\x14\x1e\x8a\x47\x85\x1e\x17\xc2\x9e\x7a\xea\x13\x94\x65\x09\x31\x99\x46\xad\x26\xae\x33\x69\xb6\x94\xbe\x7b\x89\xb1\x28\xd2\xc3\x1e\x02\xc9\x3f\xff\xf7\x31\xe4\x62\xf0\x5d\x85\x81\xaf\x00\x8c\x77\x96\x3d\x15\xa2\xe8\x49\xa6\x47\xd5\x13\x00\x5c\x08\xd5\xac\x5b\x89\xce\x76\x0e\xaf\x00\xd6\x7b\x3b\x60\x21\x8a\x96\x79\xa2\x53\x5d\xc7\x18\xab\x1c\x56\xda\x8f\x75\xee\x9f\x6f\xe2\xe9\xfb\xf5\xe5\xed\xa7\x24\xad\x64\x98\x3e\xc5\x73\x49\x3e\xcc\x1a\xc5\xe0\xb8\xe4\x86\xc4\xcd\xcc\xa7\x71\xd5\x49\x87\x91\x1e\x77\x72\x33\x0a\x17\xd3\x7a\x8d\xea\x4c\x38\x80\x4b\x96\xb9\x73\x34\x2b\x03\x4d\xe7\xec\xb1\xd8\x39\xfb\x9f\x1f\xbe\x54\xeb\xfd\xae\x9c\xe7\xd5\x12\xef\x81\x69\x03\x9c\xc1\xfb\x41\x9f\xc3\xa5\x9f\xae\x2b\x93\xbe\xf6\x0f\x33\x41\x7f\xa4\x63\xfd\x01\xdd\x06\x0b\xbe\x6d\xf6\x1b\x00\x00\xff\xff\xa1\xfe\xf8\xac\xb1\x01\x00\x00")

func resNodeXIniBytes() ([]byte, error) {
	return bindataRead(
		_resNodeXIni,
		"Res/node-x.ini",
	)
}

func resNodeXIni() (*asset, error) {
	bytes, err := resNodeXIniBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "Res/node-x.ini", size: 433, mode: os.FileMode(420), modTime: time.Unix(1717941212, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"Res/cert.pem":       resCertPem,
	"Res/google.js":      resGoogleJs,
	"Res/google_news.js": resGoogle_newsJs,
	"Res/js_text.js":     resJs_textJs,
	"Res/key.pem":        resKeyPem,
	"Res/node-x.ini":     resNodeXIni,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"Res": &bintree{nil, map[string]*bintree{
		"cert.pem":       &bintree{resCertPem, map[string]*bintree{}},
		"google.js":      &bintree{resGoogleJs, map[string]*bintree{}},
		"google_news.js": &bintree{resGoogle_newsJs, map[string]*bintree{}},
		"js_text.js":     &bintree{resJs_textJs, map[string]*bintree{}},
		"key.pem":        &bintree{resKeyPem, map[string]*bintree{}},
		"node-x.ini":     &bintree{resNodeXIni, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
