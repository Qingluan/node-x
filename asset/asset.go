// Code generated for package asset by go-bindata DO NOT EDIT. (@generated)
// sources:
// Res/cert.pem
// Res/google.js
// Res/google_news.js
// Res/js_text.js
// Res/key.pem
// Res/node-x.ini
package asset

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

// Name return file name
func (fi bindataFileInfo) Name() string {
	return fi.name
}

// Size return file size
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}

// Mode return file mode
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}

// Mode return file modify time
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}

// IsDir return file whether a directory
func (fi bindataFileInfo) IsDir() bool {
	return fi.mode&os.ModeDir != 0
}

// Sys return file is sys mode
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _resCertPem = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x94\xcb\xae\xaa\x48\x18\x46\xe7\x3c\x45\xcf\x4d\x47\x10\xd8\xe8\xb0\x8a\x2a\xa0\xb8\xc9\xb5\xd8\x3a\x43\xe4\x8e\x08\x82\x14\xf2\xf4\x9d\xb3\xd3\x27\xe9\xa4\x73\xfe\xe1\xca\x9a\xad\xfc\xdf\xdf\xbf\x0e\x62\x9d\xb8\x7f\xa9\x38\x88\x88\x46\x54\x10\xe1\x1f\xca\x39\x84\xa8\x52\xa4\xaa\x20\x7b\x94\x80\x11\x08\x4a\x12\x1b\x64\x27\xce\x48\x36\xe7\x5a\x33\x32\x1d\x86\x9d\x65\x75\x18\xda\x11\xcd\x00\x43\xfe\xc5\xb4\x9e\x57\x52\x2d\x99\x0b\x7c\x6c\x73\xd0\x07\x0c\x20\x90\x6b\x8c\xff\xb8\x08\xaf\x4e\xe4\x30\x77\x23\x9b\xd3\xd0\x54\x63\xfc\xe6\x22\x20\xfd\x97\x39\x00\xb0\xb2\xc4\xb5\x03\x78\x5d\x0d\x47\x9d\x0b\xc9\x4d\x44\x3e\x86\xc0\x8f\x01\x90\x08\x44\xec\x47\xb0\xc0\x93\x40\xe0\xab\x95\xd6\x06\xae\x0e\x27\x67\x15\xcf\xa7\x49\x26\xd7\xd7\x33\xe0\xeb\x21\x81\xcb\xfe\x7d\x9a\x02\xc1\xe1\x4e\x03\x53\xa8\x7e\xdd\xbb\x8b\x99\xaf\x66\x78\x01\xf5\x5e\xe0\xed\xef\xc4\x32\x25\xbb\x8b\x95\xbc\xda\x1f\xa4\x7e\x70\x87\x67\x42\xee\x26\xe9\x6c\x7b\x39\x48\xc7\xb1\xce\x71\x2d\x76\x74\xb0\x10\x47\x34\x7e\x9c\x19\x1f\x15\xfe\x65\x7f\x95\x5f\xd1\x6b\x34\x1f\xfd\x88\x86\xb1\xd6\xe0\x32\x1e\xbf\xd6\x6b\x21\x79\xc0\x0f\x46\x52\x78\x3b\x61\x43\x59\x41\xb3\x08\xc4\x61\x6e\x7d\xbc\xa5\x56\x22\xae\x18\xb7\xe1\x81\x6c\x08\x61\x41\x89\x38\x3e\x4c\xf8\x25\xbc\x2e\xf7\x60\xb3\x69\x32\x50\x8f\xb4\x79\xcf\x76\x48\x27\x12\xad\x3f\x9b\x76\x37\xdc\x93\xe2\x28\xd7\xfa\x79\x76\xf1\xc7\x69\x0a\xc4\x51\x21\x16\xeb\x35\x57\x3c\xf5\x34\x47\x49\xba\xca\x99\xcc\xf7\x93\x3d\xca\x2c\x91\xdc\xe8\xbd\x7b\xe3\xf6\xcb\x11\x90\x29\x6e\x04\xac\x6a\xba\xa0\x54\x3c\x58\xe7\x45\xb8\x7b\xb3\xb6\x1b\x9b\x0f\x67\xb5\x0e\xa0\x1f\x0b\x07\x96\xdf\x6f\x69\x23\x64\xf7\xef\xd1\x6b\x03\x39\xb6\x90\x38\xb9\xa0\xd0\xb4\x83\xcf\x9a\x0e\xc7\x59\x3b\x1d\x43\x55\xdf\xc9\xbb\x00\x94\x0e\x04\x40\x6f\xe2\x0d\x06\x9c\x03\x79\x1d\x08\xf1\x1d\x95\x7e\x02\x61\x08\x9c\xb8\x16\xa5\x58\xbb\x55\x15\x3d\x80\x59\xf8\xac\xe7\xa9\xee\x0f\xf9\xe3\x2b\x02\x05\x2c\x5d\x6a\x84\x0e\xd6\x11\x48\xca\x7f\x5d\xee\x0f\xb2\xf7\x23\x07\x0e\x04\xc5\x11\xc3\x08\x20\xe0\x1b\xfb\xdf\xed\x7f\xa7\x57\x59\x0c\xb8\x5f\xed\x81\x0f\x43\x94\xdf\xb0\x7e\x48\xbb\xe7\x84\x6e\x20\xef\x7a\x7c\x2a\x73\x45\x9f\x6e\xef\x4b\x64\xd8\x2d\x95\x15\x55\x12\x0b\xc8\x32\xbf\x74\x99\xe2\x36\xf4\x65\x1f\x87\xc5\x66\x3d\x17\x7c\xbe\x9b\x55\x0b\x53\x50\x2b\x30\xcb\x5e\xf7\x74\x49\x76\xca\x57\x52\x88\x66\xb8\x09\x25\x95\xb7\xa4\xd2\xaa\x13\x95\x2b\xd1\x76\xd4\xda\x9c\xe5\x7b\x73\x1e\xbe\x15\xef\x11\x7f\x7b\xa8\x92\x6c\x2e\x6a\xc7\x65\x6e\x8b\x28\x8d\xf9\x22\xa4\xac\xc4\xd3\xc3\xe8\xad\xe7\xbe\x68\xd8\x7b\x7e\x68\x1b\x54\x0b\x71\xda\x7f\x47\x85\xed\xb5\x98\x46\x9b\x40\x06\xfd\x1a\x19\xed\x84\xc7\xc7\xf1\xba\x9e\xb8\xb8\x58\x3a\xf1\x51\xee\xec\x64\x96\xe5\xa8\x37\xb4\xea\x62\x28\x87\x01\xf0\x7c\x35\x8f\xbd\xb4\xee\x75\x62\x29\x47\x13\x4c\xc6\x5b\x73\x7c\xf1\xd3\xa5\x5b\x61\x08\x0e\x7d\xe9\x2b\x7b\xa5\xb5\xc9\x79\xa4\xf2\x50\x17\x82\xe7\x35\x3e\x67\xec\xd3\x75\xae\xb0\x2e\xcd\xbc\x6b\xfb\x31\xbd\x8d\x3b\x59\xef\xe2\xc1\x14\xd6\x2b\x49\x26\x32\xca\x2b\xc8\xe2\xc3\xdc\xab\x9b\xc7\xe8\x3c\x5f\x9e\x3e\xe2\x32\xbd\xc7\x97\xa7\x56\x19\x0d\x35\x16\xf9\xde\x10\x94\x9e\xab\x6b\x6d\x76\xe9\xd4\x72\x3f\x1f\x8f\x5d\xf4\xff\x15\xf8\x27\x00\x00\xff\xff\xfe\xe3\x92\xe1\x22\x04\x00\x00")

func resCertPemBytes() ([]byte, error) {
	return bindataRead(
		_resCertPem,
		"Res/cert.pem",
	)
}

func resCertPem() (*asset, error) {
	bytes, err := resCertPemBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "Res/cert.pem", size: 1058, mode: os.FileMode(420), modTime: time.Unix(1731482605, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _resGoogleJs = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x54\xdf\x4b\x1b\x4b\x14\x7e\xf7\xaf\x38\xe6\x41\x77\x21\xec\x5e\xf0\xcd\xb0\xc2\x45\x7c\xb8\x97\x4b\xae\xb4\x7d\x50\x4a\x29\x43\x72\xd6\x5d\x98\xec\x86\xd9\xb3\xfe\xa0\x04\xac\xf8\x23\x8a\x96\xbe\x54\xac\x48\x2b\x94\xfa\x54\xab\x4f\xad\x62\xe9\x5f\xe3\x4e\xea\x53\xff\x85\x32\x33\xdb\x24\x6b\x92\xe2\x3c\x64\x73\xe6\xfb\xce\x37\xdf\x99\x39\x33\x75\x46\x0c\xbc\x19\x78\x31\x06\x00\xc0\x91\x60\xa1\xc9\x28\x00\x0f\x2c\xf5\x2d\x03\x72\xf4\xa2\x94\xf3\x32\xf8\x21\x27\x14\x3a\xb0\xbd\x19\x93\xa0\x46\xe8\x83\x85\x1c\xc1\xf3\x40\x63\x3d\x44\x0d\x8d\x40\x3d\xae\xa5\x0d\x8c\xa8\xd2\xc5\x5a\xdd\x7f\xcb\x4c\x80\xc0\x24\xe5\xd4\x47\x74\x70\x99\xf1\x94\x11\xf6\x6c\x94\xc1\xf8\x58\x98\x67\x14\x3c\xd2\x09\xce\xdf\xd5\xc5\xe7\x4f\x16\xe7\xe7\x0c\x66\x57\x0a\xa2\x51\x5c\xc7\x04\x3c\x78\xfa\x6c\x70\x1e\xbc\x7c\x4d\x27\x24\x14\x8c\xb0\x8a\xab\x64\xf5\x09\xb8\x2e\xdc\xbd\x3c\xc8\x5e\x6d\xcb\xdd\x75\x79\xb2\x9b\xed\x5f\xdf\x6d\x1d\x74\x8e\x37\x7f\xec\x6d\x74\x36\xae\xbb\xb4\x95\x20\xe4\x08\x96\x92\xb4\xa1\x58\xb9\xeb\x82\xfc\xb0\x2e\xdf\x7f\xec\xb4\xbf\x98\x2c\x79\x74\x91\xbd\x3e\x93\x47\x17\x49\x4d\x84\x4d\x92\xed\xc3\x84\xd6\x38\xca\xd3\x9d\xce\xf9\xf7\x42\xae\xb2\xd9\x64\x02\x23\xb5\x27\x4a\xdc\x31\x51\x35\xae\x63\xa5\xc0\x54\xbb\x9f\x33\x27\x26\xf2\x1c\x87\xd8\x52\x95\x35\xd0\xa1\xf8\xbf\x78\x05\xc5\x2c\x4b\xd0\xb2\x61\xdc\xf3\x60\xd2\x2c\x3d\xf9\x40\xb2\xb2\x37\x79\xbf\xb0\xbc\xb8\xec\x6c\x43\xbe\x3b\xb9\xbd\x3a\x90\x47\x17\x3f\xbf\xed\x67\xed\xb7\xd9\xe5\xb6\x3c\xdc\x91\x27\x9f\x4c\xb9\x9d\xe3\xcd\x6c\x7b\x2b\xfb\x7c\x2d\xbf\xde\x64\x7b\xa7\x59\xfb\x52\xbe\xb9\xec\xdc\x6c\xde\x5e\x9d\x0f\xe8\xa9\x32\x74\x9d\x84\xab\x34\x1b\x47\xa4\x9d\x89\xb0\x61\xd9\x0e\xc7\x68\x89\x02\x98\x81\xbf\xec\x41\x23\xbf\x93\x4d\x77\xc2\xb8\x69\x42\x55\x1e\xad\x35\x31\xf6\x73\xc0\x56\xed\x59\xf2\xd3\xa8\x46\x61\x1c\x95\x46\x08\x15\xc5\xcc\xa9\xfe\x81\xaa\x86\x6e\x32\xa7\x99\x26\x81\xa1\x57\x46\xb2\x5b\x43\x91\x16\xf2\x04\x47\x2f\xf1\x30\xf9\x41\xe9\x11\xb2\x45\x62\x31\x7a\xd0\xb5\xe8\xa5\x08\xa4\x54\x44\xc6\xe0\x98\x81\xba\x6f\x08\x72\x7d\xf1\xf4\x53\x62\x95\x5c\xb7\x1e\x2e\xbb\x49\x93\x45\x2e\x73\x83\xa9\x92\xdd\xe5\x25\xc8\x44\x2d\xf8\x87\xb0\xd1\x7f\x4f\xfd\x58\x58\x0a\x0d\xa6\x20\xf6\xb5\x56\xdf\x19\x28\x80\x42\xd2\xaf\x4a\x30\x35\xa4\x5d\x2a\x05\x6a\x2a\xb8\x21\x9a\x66\x9f\xe3\xa8\x5f\x97\x40\xa0\x5f\x24\xd6\x31\xa9\x0d\x63\x16\xa3\x21\xdd\x29\xb0\xc9\x59\x0d\xad\x54\xf0\x72\xa9\xd4\x8b\xb5\x49\x3d\x33\xcc\x57\x48\xd8\x00\xef\xde\xc5\xd2\x29\xd3\xe6\x53\x2e\x20\xa9\xe0\xd3\xea\xa7\x38\xab\x3c\x4f\xeb\xdf\x21\xe7\xd3\xb7\xb7\xa6\x7f\xd4\x92\xb9\x0b\xc3\xca\x4f\xf0\xdf\xc7\xff\x57\x9d\x84\x44\x18\x2d\x85\xfe\x9a\xd5\x97\x67\x57\xc6\x5a\xbf\x02\x00\x00\xff\xff\xb9\x16\xae\x86\x21\x06\x00\x00")

func resGoogleJsBytes() ([]byte, error) {
	return bindataRead(
		_resGoogleJs,
		"Res/google.js",
	)
}

func resGoogleJs() (*asset, error) {
	bytes, err := resGoogleJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "Res/google.js", size: 1569, mode: os.FileMode(420), modTime: time.Unix(1717568138, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _resGoogle_newsJs = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x54\xcf\x4f\xdb\x48\x14\xbe\xf3\x57\x3c\x72\x00\x5b\xca\x3a\x2c\x62\x2f\xc9\x1a\xed\x0a\x71\xd8\xd5\x2a\x8b\x76\x7b\x00\x21\x54\x59\xf1\x33\x1e\x69\x62\x47\xe3\x71\x00\x55\x91\x28\xe2\x47\x40\x50\xf5\x52\x44\x11\x6a\x91\xaa\x72\x2a\x85\x53\x0b\xa2\xea\x5f\x83\x9d\x72\xea\xbf\x50\xcd\x4c\x9a\xc4\x38\x89\x5c\xb5\x52\x2d\x65\xe2\xf1\xf7\xbe\x6f\xde\x9b\xf9\xe6\xd9\x16\xb7\xc0\x9c\x86\x47\x23\x00\x00\x14\x39\xcc\xd7\x2c\xee\x82\x09\x9a\xf8\xcf\x03\x52\x34\xbd\x90\xd2\x3c\x38\x84\x72\x64\x72\xa2\x9b\xd3\x8a\x20\x1e\xe2\x80\x86\x14\xc1\x34\x41\x62\x5d\x44\x3c\x12\x01\xdb\xaf\x84\x55\xf4\x78\xa9\x83\x35\x3a\x6f\x75\x8b\x01\xc3\x20\xa4\xbc\x27\xd0\xc0\xba\x45\x43\x8b\x63\x37\x8d\x3c\xa8\x3c\xe6\xe7\x2c\xee\xfe\x27\x09\xc6\x9f\xe5\x85\x87\x0f\x16\xe6\x66\x15\xa6\x97\x12\xa2\x9e\x6f\x63\x00\x26\x2c\x2e\xa5\xbf\x83\xd9\x5e\xd3\x20\x1c\x99\xc5\xb1\x8c\xab\x5c\xeb\x11\x28\x14\xe0\xee\xf1\x41\xf4\x64\x3b\xde\x5d\x8f\x4f\x76\xa3\xfd\xeb\xbb\xad\x83\xd6\xf1\xe6\xa7\xbd\x8d\xd6\xc6\x75\x27\x6c\xc5\x25\x14\x41\x13\x92\x3a\x24\x2b\x2f\x14\x20\x7e\xb5\x1e\xbf\x7c\xdd\x6a\xbe\x53\xac\xf8\xe8\x22\x7a\x7a\x16\x1f\x5d\x04\x15\x46\x6a\x3c\x6e\x1e\x06\x7c\x8d\x62\x7c\xba\xd3\x3a\xff\x98\xe0\x8a\x34\x6b\x16\x43\x4f\xec\x89\x10\x37\xd4\xac\xec\xdb\x58\x4a\x44\x8a\xdd\x6f\x47\x8e\x8d\xb5\x39\x06\xb7\x96\xcb\x56\x15\x0d\xee\xff\xe3\xaf\x20\x9b\xb1\x02\xd4\x74\x18\x35\x4d\x18\x57\x4b\x8f\x67\x0c\x16\xe9\x8d\xdf\x2f\xac\x5d\x5c\x74\xb6\x11\xbf\x38\xb9\xbd\x3a\x88\x8f\x2e\x3e\x7f\xd8\x8f\x9a\xcf\xa3\xcb\xed\xf8\x70\x27\x3e\x79\xa3\xca\x6d\x1d\x6f\x46\xdb\x5b\xd1\xdb\xeb\xf8\xfd\x4d\xb4\x77\x1a\x35\x2f\xe3\x67\x97\xad\x9b\xcd\xdb\xab\xf3\x94\x9e\x28\x43\xd6\xc9\x71\x95\xcf\xf8\x1e\x97\x99\x31\x52\xd5\x74\x83\xa2\xb7\xcc\x5d\x98\x86\x09\x3d\x9d\xc8\x57\xb2\x72\x27\x8c\x2a\x13\x8a\xf2\xf8\x5a\x0d\x7d\xa7\x0d\xe8\xc2\x9e\x39\x27\xf4\x2a\x9c\xf8\x5e\x6e\x80\x50\x52\x4c\x9d\xea\x90\x50\xf1\x48\x93\x19\xb5\x30\x70\x55\x78\x69\x60\x74\xa3\x2f\xd2\x40\x1a\xe0\xe0\x25\xb2\xc9\xa7\xa5\x07\xc8\x26\x03\x93\xb3\x4c\xd7\xa2\x4b\x61\xc8\x43\xe6\xa9\x04\x47\x14\xd4\xe9\x21\x48\xe5\xc5\x93\xad\x44\xcb\x15\x0a\xd6\xe2\x1f\xa2\xd1\xfc\x52\x47\x7b\xa9\x60\x93\xba\xf8\xe5\xf4\x4e\x78\x80\x16\xab\xb8\x7f\x71\xac\xf6\x5e\x57\xc7\x67\x9a\x40\x6d\x52\x07\xdf\x91\x9a\x7a\xb2\xeb\xd8\xa4\x6e\x54\x5c\x42\x6d\x86\x5e\xd7\x25\x93\xe2\xf0\xfb\x41\xbf\xc3\x6f\xf7\x0e\x53\xc8\xd7\xfc\x40\x36\x9e\x1e\xc2\xe2\xc4\x52\x1f\x1f\x96\x52\x54\x4e\xb8\xea\x6e\xbd\xdc\x5f\xb3\x71\x43\x46\xdb\x4c\x75\x0d\x67\x29\xca\xbe\x97\x9c\xb9\x0c\x9d\x34\xd7\xb6\x78\x6a\xd9\xc9\xbe\xcb\x0a\x46\x8a\x4e\x38\x56\xc1\xec\x73\xa9\x65\x3d\x45\xf5\x97\x4f\xa1\x21\xa3\x45\x31\xa4\x11\xb1\x85\x45\x39\xa6\x31\x91\x6b\x51\x8e\xf9\x21\xde\xeb\x71\x80\x32\xbb\xc8\xf1\xde\xae\x75\x3d\x28\xbc\x3d\xc4\x00\x53\x7d\x4e\xf9\x7b\xb6\xfb\x27\x39\xc4\xc6\xa0\x92\xed\x94\x33\x19\x64\x2a\x1b\xf5\x87\x9b\x43\x94\x51\x94\x63\x76\x73\xc0\x10\x53\x7d\x9b\x71\xba\xd1\xc9\x17\xf5\xbd\xdd\xc3\xfe\xfe\xff\xdf\xb2\x11\x70\x46\xbc\x65\xe2\xac\x69\x3d\x9a\x7a\x69\xa4\xf1\x25\x00\x00\xff\xff\x34\x0c\x26\x14\x23\x09\x00\x00")

func resGoogle_newsJsBytes() ([]byte, error) {
	return bindataRead(
		_resGoogle_newsJs,
		"Res/google_news.js",
	)
}

func resGoogle_newsJs() (*asset, error) {
	bytes, err := resGoogle_newsJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "Res/google_news.js", size: 2339, mode: os.FileMode(420), modTime: time.Unix(1717552630, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _resJs_textJs = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x56\x4f\x6f\x1b\x45\x14\xbf\xfb\x53\xbc\xec\x21\x59\xd7\x61\xed\x04\x02\x04\x7b\x2d\x45\xa6\x87\x4a\x10\x2a\x28\x12\x55\x53\xac\x91\xfd\xd6\x9e\x30\xde\x59\xcd\xce\x36\xae\xa8\x0f\x15\x12\x14\x01\x15\x17\x0a\x82\x03\x1c\xa2\x72\x21\xe2\x8f\x38\x44\x51\x3f\x4e\x9c\x96\x53\xbf\x02\x9a\xd9\xf5\xee\x78\x67\x9d\xf6\x82\x84\x4f\xd9\x7d\xbf\xf7\x7e\xbf\xf7\x77\x33\x24\x92\x80\xdf\x85\x4f\x6b\x00\x00\x77\x88\x80\x69\x44\xe4\x18\x7c\x70\x9a\x4d\x89\x53\xe9\xd6\x9d\x76\x6e\x13\x18\x27\x4c\x82\x0f\x43\x3e\x48\x26\x18\x4a\x0f\xef\x10\x96\x10\x89\xae\x76\xdb\xcc\x0d\x9b\x10\x26\x8c\x6d\xc2\x47\xd7\x89\x1c\xbf\xaf\xdd\xbc\xbd\xfd\x9b\xfd\x1b\x37\xaf\x5f\x4d\x6d\xf5\x22\xac\xe2\x89\xc1\x87\x5b\xb7\x8b\x77\x21\x1f\x22\xf8\x19\xa3\x47\x25\x0a\x22\x71\x5f\x0b\x4a\x41\x0c\x25\x48\x2a\x19\x9a\x72\xf4\x0b\x4f\x0a\x3a\x31\x61\x8c\x86\x9f\x98\x28\xc6\x07\x44\x52\x1e\x7a\x63\x81\x41\x01\xa3\xc1\x61\x32\x89\xc0\x87\x80\xb0\x18\xdb\xb5\xc2\x10\x5f\x0d\x47\x8c\xc6\xe3\x77\xc9\x21\x17\x54\xde\x05\x1f\x62\x29\x8a\xba\x2d\x80\x98\xc2\x7a\x3c\x09\x55\x95\x5a\xed\x25\xeb\x60\x4c\x43\x8c\xb1\x64\xcd\x21\xcd\x26\xfc\x73\xff\x9b\xf9\xc3\xcf\xe7\x27\xdf\x3f\xfd\xed\xf1\xf9\xe9\x5f\xb9\x29\xe0\x02\x5c\xad\x44\xfb\x01\x85\x8e\x12\xe0\x31\x0c\x47\x72\xdc\x06\xda\x68\xd4\x0d\x29\x03\x1e\xc6\x8a\x8e\x88\x5e\x5a\x45\x85\x5d\x3c\xee\x49\x97\xd6\x6d\xea\xf9\x83\xe3\x8b\x47\x27\x29\xf5\xc5\x0f\xbf\xcf\xbf\x7d\x7c\x7e\x7a\xf6\xec\xab\x3f\x2f\x1e\x7d\x91\xbe\x7c\xfe\xe4\xc1\xfc\xe7\xb3\xf3\xb3\x87\x7b\x1f\xf4\xae\x5d\x7b\xfa\xcb\xfd\xe7\x4f\xbe\xcc\x03\xd0\x00\xdc\x9c\xaf\xeb\xc3\xeb\x3b\xb0\xbe\x5e\x28\xe8\xf8\xb0\xdb\x82\x7b\xf7\xc0\xc4\xec\xbe\x51\xc6\x6c\x6d\x6f\x9b\x69\xa8\x9f\x59\xd1\x46\xa3\xa8\xe7\xec\x85\xda\xcf\x4f\x4f\x6c\xed\x1f\x86\x74\xc0\x87\xf8\xec\xeb\xcf\xe6\x3f\xfd\x6d\x26\x80\x2c\x46\x2b\x8b\xd6\xf4\x35\x6c\xb5\xca\x2a\x5b\xd3\xdd\x80\xec\x94\x85\x9a\xcd\xad\x16\x3a\x5b\x51\xf3\xb4\xc8\xb9\xee\xf9\xf1\xaf\xf3\xe3\x1f\x2f\xbe\xfb\x23\x47\x0a\x94\x89\x08\x97\x87\xab\xbb\x44\x98\xd2\xa5\x04\x47\x63\xca\x10\x5c\xb5\x3f\xa6\x46\xb5\x53\x11\x11\xa8\x47\x4f\x19\xbd\xf4\x69\x9f\x0f\xb1\xbd\xd4\xc7\x0c\xb5\xbe\x9e\xc2\x24\x19\xed\x93\x09\xc2\x9a\x0f\x4e\x2c\xef\x32\x74\xaa\x4d\x03\x41\x23\xa9\x6d\x69\x80\x85\xd5\x93\xfc\x1d\x7e\x84\xa2\x47\x62\x74\xeb\xb0\xe6\xfb\xb0\x91\x82\x37\x5e\x12\xac\x48\x5f\x06\x0b\x0e\x0d\x04\x99\xa0\x53\xee\x8d\xca\x2a\x15\x8c\x53\xd9\xe3\xa1\xd4\x51\xf4\x91\xc8\x56\x08\xba\xb0\x53\x5f\x76\xca\x6f\xcc\x34\xaf\x98\xed\xde\xb6\x5c\xd4\xee\x71\x86\x1e\xe3\x23\xd7\x79\x1b\x09\xa3\xe1\xe8\x2d\x67\x53\x4e\x65\x05\x58\x1f\x3e\x2f\x4a\xe2\xf1\x2a\x7d\x15\x4e\xe5\x33\x65\xda\x66\x6a\x8e\xed\x3c\x54\x01\xd6\x32\xc7\x8a\x34\x0d\x19\xce\x41\xe8\x5c\xc6\x29\x45\x82\xb6\x79\x56\xab\x7e\x2a\xfe\x7a\xe1\x39\x9f\xe5\x97\x9f\x30\x76\x03\x75\xd1\x53\x5d\x87\x9c\x86\xee\xc6\x41\xb8\x91\x21\x23\x22\xc8\x48\x90\x68\xac\x3e\x19\x19\xd8\x8b\x23\x46\xa5\x52\xaf\xf4\x6b\x58\x12\x31\x4e\x86\xfd\xb4\x7d\x8e\xa3\xdf\x05\x5c\xb8\xd9\x07\x01\x81\x07\x46\x28\xa3\x2a\xaa\x58\x85\xf3\x62\x40\xd6\x7c\x68\x95\x4a\x67\x30\x34\x7c\x50\x95\xab\x48\x5c\xd1\x29\x1a\xf0\x35\xab\x27\x30\x62\x64\x80\x6e\xb3\x73\xeb\xe3\xee\xed\x2b\x5d\xef\x4a\xe7\xa0\xe9\x5d\xe9\x36\x47\x9b\xe0\x64\xd2\xa1\xd8\x44\xe2\xd1\x70\x88\xd3\xf7\x02\xd7\xe9\xe8\x45\x00\xa7\x0e\x5d\x78\x65\x0b\x4a\x62\x06\x3c\x94\x34\x4c\xb0\x42\x82\x1d\x33\xcb\xa9\x03\xdb\xad\x6c\xaf\x0c\x1e\x70\xea\x1d\x2b\xd7\x4b\xc2\xe7\x51\xb3\x8d\xca\x03\xa9\x56\x68\xad\xa5\x58\x55\x5d\x28\x1a\xe8\xd4\x2b\x26\x54\x71\x58\x5f\x61\x57\x05\xa8\x42\x2f\xea\x7e\xc4\xc5\x30\x5e\x14\x3e\x53\x97\xf1\x80\x51\xea\x32\x91\x76\x2b\x6a\xf4\xea\x0a\x86\xca\xb2\x98\xbf\x15\xcb\xb8\xf8\xd9\xe3\xd3\x30\x84\x56\x47\xb4\x37\x6f\x35\x87\x4a\x45\x07\x34\xbb\xfd\xbf\xce\xc5\x7a\xb3\xea\xac\xd8\x62\xac\x7b\x6f\xce\x79\xf5\x71\xaf\xd0\xac\x9c\x96\x39\xad\xf8\x33\xe3\x5a\x09\x24\xac\x1f\x11\xa1\x66\xcc\xb8\x18\xc6\x2d\xca\xaf\x11\x4f\x64\x94\xc8\xbe\xba\x68\xfd\x88\x8c\xd0\xbe\x49\xfa\x48\xf0\xa0\x08\x5a\x3a\x49\xf6\xf8\x2b\x8f\xf2\xf8\xe7\xa9\x17\x73\x5e\xf4\x7f\xab\xbc\xd5\xb0\xaa\xed\x2b\xda\x6d\x65\x61\x16\xae\xaa\xd9\xb3\xda\x65\x4d\xb3\xef\xd1\xd6\x9b\x55\x13\xfa\x1f\x4b\xac\x6e\xad\xfe\x9f\xab\x1c\xad\x36\xab\xfd\x1b\x00\x00\xff\xff\x4f\x6e\x4d\x1c\x32\x0d\x00\x00")

func resJs_textJsBytes() ([]byte, error) {
	return bindataRead(
		_resJs_textJs,
		"Res/js_text.js",
	)
}

func resJs_textJs() (*asset, error) {
	bytes, err := resJs_textJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "Res/js_text.js", size: 3378, mode: os.FileMode(420), modTime: time.Unix(1717569217, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _resKeyPem = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\xd5\xa7\x12\xa4\x50\x02\x85\x61\xcf\x53\x8c\xa7\xb6\xc8\xdd\x20\x56\x5c\x72\xce\xb1\x1d\xb9\x81\x26\x67\x9e\x7e\x6b\xc6\xee\x91\x47\xfd\xee\xfb\xcf\xdf\xb1\x82\xa4\x98\x7f\x6c\x57\x09\x81\x2f\xfc\xd1\x84\xe4\xdf\x0b\x19\x8a\x22\x1c\x8e\xc2\x02\x1e\x98\x6c\xdd\xcd\xdf\xae\x91\x98\x13\x65\x81\x23\x88\x00\x78\x1c\xab\xe5\x67\x5d\x7b\x2d\xa8\x05\x00\x46\x85\x05\x0e\xf7\x15\x3b\xd7\x94\xd8\xd5\xb8\x08\x8b\x81\x56\x4a\xf9\x2c\xa3\x8b\x36\x53\xc4\x1e\xc8\xce\xac\x2e\x66\x30\xd3\xf9\x0e\xa5\x0f\x62\x1e\x6a\x79\xa9\x5e\x02\x1a\x04\x43\xf5\x38\xd2\x54\x52\xff\x05\xef\xf2\x8b\xe0\xe4\x30\x99\xd3\x18\x29\x05\xa4\x2a\x3f\x5d\x3f\x70\x92\x9e\x9b\x52\x68\x88\x5f\x38\x69\xbc\x22\xa2\xf3\x76\xa2\x7e\xe5\x24\xc8\x87\x5a\xfc\x65\x56\xfb\x61\xe6\xa7\xb9\x11\xd9\x63\xa6\x5f\xd7\xa7\x22\x6d\xe0\xb8\xb3\x52\xd9\x10\x8c\x3d\x7c\x5e\x85\xb9\x0f\x02\xaf\xd4\x6e\xfb\x68\xde\x7e\x35\x3f\x53\xcf\xeb\x2c\xcb\x56\xa1\x42\xcc\xbd\xca\xbe\xb0\x25\x29\xdc\x47\x0f\xa3\x29\xb4\x95\xae\x1c\x4e\x98\x97\x14\x32\x6c\x6e\xe8\x11\x0b\xd9\x64\xde\xc6\xfb\xd3\x8c\x96\x29\xdc\x46\x5b\xf1\x21\x16\x10\xcd\x55\xbe\x6d\x8e\xd9\xfc\x28\xbd\xa8\x9c\x42\x87\x55\x9f\xa9\x33\x22\x4d\x7f\x87\x77\xa1\x7b\x19\x18\xaf\x12\x8f\x02\xa0\x8b\x4b\x0f\x3e\x25\x70\xcd\x3a\xb0\xc2\xde\x44\x78\x6e\x6f\xad\x33\x40\x78\x6b\x82\xab\x39\xc3\x93\xb6\x58\x5e\xc4\xb3\xdd\xb9\x54\xa0\xf1\xc4\x6a\x82\x4a\x14\x71\xe7\x6c\x7f\x42\x90\x77\x2b\x44\x7b\x9c\x04\x53\xb0\x0b\x6a\x83\x05\x40\xe0\xea\x5a\x00\xe6\x67\x6a\x1d\xe0\x60\x15\xbb\x36\xbb\x82\x91\xa3\x6c\x34\x8e\x14\x15\xd6\x80\x24\x62\x58\x68\xbd\x21\x11\x11\x9a\x69\x3f\x6d\x16\x20\x59\xf2\xb7\x27\x2a\xd6\x77\xc3\x60\xc1\x42\xb9\x91\xf7\xeb\xd9\x20\xcb\x8a\xd3\x36\xe7\xb2\xa1\xde\x61\xb3\x88\x67\x9f\xb3\x22\xfd\x96\xcd\x97\x7d\x3d\x3c\xb1\x82\xb9\x63\x6a\xd9\x9f\xd9\x86\x83\xd2\x77\x56\xca\x83\x66\x99\x48\x79\x99\x2c\x48\x48\xbb\xe2\x18\x6a\x1f\xa9\x4e\xf2\x22\x87\x58\x46\x6a\x70\x43\xb9\x1e\xe2\x98\xde\x73\x2b\x8f\x59\x9b\x0c\xcc\xfd\x06\x76\xbc\xc6\x2f\x45\x29\x20\x36\xfe\x54\xdb\x95\x13\x87\xe6\x59\x51\xdc\x4b\x07\x0b\x66\x6f\xc6\x28\x03\xa1\xbe\xee\x27\xbd\xcd\x69\x2e\x42\xa2\x75\x9f\x3c\x8d\x62\x2e\xb0\x52\xb3\x07\x3e\x83\xd7\x56\x4b\x5a\x6f\xdc\x2b\x20\xf4\x90\x72\xf2\x16\x1e\x17\x03\x19\x36\xf9\x8a\xb1\xc9\xb7\x68\xeb\xd6\x92\xdc\x4a\xa3\xb7\x75\xc7\x18\xed\xa0\xa1\xe6\xc7\x5a\x60\x37\x3b\x8b\xc4\x78\xe1\xcf\x17\xcf\x16\x4f\x32\xd1\xdc\x7f\x41\xa2\xef\x66\x4d\xb2\x54\x86\x2f\xf1\x55\x5d\x69\xed\x95\x12\x67\xb1\x98\x26\x9f\x9e\x03\xca\x04\x19\x3d\x17\x77\x90\xfc\x4e\x47\x63\x6b\x87\xd7\xf1\x07\x1e\xe3\x52\x3d\x7f\xe2\xc2\x96\x26\xfd\x82\xc2\x17\x5e\x94\x9e\x23\x34\x32\xb6\x2e\x72\xf4\xe9\xe3\x96\xe2\xb7\x1c\x7d\x9c\xfd\xfd\x2d\x88\x63\x05\xef\x32\xdb\xda\x61\x8a\x45\x79\x7f\x23\x96\x49\x9d\xcd\x32\x68\x98\x83\x9c\xd1\xf6\x84\x05\x74\xce\xd2\x7a\x96\x01\x96\xd1\xcb\x22\x80\x71\x44\x26\xdd\x5b\x8d\x23\xf7\x7e\x16\x87\x6e\x94\xf8\x1a\x16\x31\xaf\x76\xfa\xc2\x1a\xf8\xc9\x30\x36\xd4\x52\x55\x9c\xf2\xf8\x0d\x26\xb3\xe3\xaf\x12\x0a\x83\xf5\xa1\xbb\xe3\x07\x8f\x06\x87\x49\x82\x92\xe6\x45\xbe\xe8\x9a\xa0\x9c\xff\x92\x35\xaf\x7f\xca\x2d\xb8\xa3\x14\xa3\xd4\x97\x7a\x13\x9c\x9c\x2f\xa0\xf2\xd0\x63\x1d\xe4\x31\x1b\x67\x08\xf0\x72\x7b\x28\x15\x92\xc4\x66\x9d\x50\xc1\x12\xe9\x3f\xa4\x71\xf7\x46\x88\xd3\x4d\x64\xae\xb6\x03\xd3\xbb\x4d\x02\x86\xba\xbf\x85\xed\xda\x7d\xdf\xa0\x6d\xe9\x2e\x8a\x27\x10\x31\x8e\xc0\x08\xf4\x00\x0a\xce\x23\xe5\x1a\xe0\x5c\x76\x3f\x59\x2e\xa6\xa8\x93\x85\x9d\x9e\x5f\x20\x1d\x54\xab\x1b\xa3\x44\xd5\x9e\x76\x45\x26\x85\x45\xd0\xf3\xeb\xdf\x58\xc5\x89\x7c\x24\x8c\xc3\xd8\xc3\x4e\x05\x21\x44\x46\x53\x94\x51\xee\x7f\x93\x05\x35\xfe\xd2\xc8\x63\xe7\xa4\x58\xe6\x56\x4e\x8e\xad\x26\xc3\xc9\xf1\xfb\x75\x6d\xd0\x90\xd9\x5a\x0e\x29\x2e\x5a\x58\xa0\x3b\x96\xbb\x19\xa7\xfe\x19\x5a\x28\xa9\xcc\x6f\x45\x85\x6d\x5e\x8f\xb8\xfd\x8a\x0c\x94\x30\x30\x7a\x78\x2d\x46\xf0\x7e\x0c\x75\x69\x1e\x71\xa6\xab\x7b\x43\xaf\xce\xff\x24\x44\xe0\x53\xac\x6b\x8a\xce\xaa\x53\x81\x54\x20\xbf\xba\x81\xbe\x87\x9c\x6e\xbd\x32\xd9\xe5\x37\xcd\x84\xa7\x6f\xc9\x63\x1b\xbe\x54\x4a\x2e\xcc\xdb\xf1\xc6\x8b\x61\x8a\x8a\x3e\xcc\x50\xc1\x71\x32\x60\x77\x1a\xb5\x3d\x19\xc1\xb8\x2f\x18\x25\x16\x28\xc3\x05\xa5\x23\xd0\x8f\xa8\xde\xa2\xdb\x1b\x64\x25\x5d\x06\xaf\x0c\x56\x66\x47\xa9\x16\x29\xbe\x7b\x7e\xe9\x9b\x63\x1b\x65\x7c\x21\x00\x0b\xfa\x6d\xd8\x75\x83\x35\x75\xed\x66\x06\x58\xc2\xf8\x4c\xb5\x20\xc4\xce\x88\x55\xa0\x6a\xd9\x72\xe5\x87\x75\x35\xeb\x27\xd5\x56\x1a\x6c\xbb\x5d\xb4\x33\xdc\x18\xda\x8b\x54\x2b\x8c\x7c\x0f\x15\x1a\x16\x9e\xb3\x48\x8c\xce\x12\x0d\x77\xf7\xcc\x6b\xda\x8f\xab\x84\xfa\xb3\x72\x3b\x32\x26\xe7\xc1\xc6\xcd\x48\xfe\x64\x4d\xa0\x6e\x5a\xdc\x73\x7d\x83\x9b\x3e\xdc\x8d\x3b\x5a\x6e\xb6\x12\x82\x51\x02\x76\x1a\x04\x31\x89\x95\xb0\x82\xf4\x2f\xe6\xe5\x50\x48\xd7\x41\x23\x2e\x0c\x55\xcd\xad\xf5\x2f\x61\xb1\x93\xa6\xec\x08\x8e\xcf\xf3\x86\x6f\x8a\x51\xe0\x2b\xee\x18\x8e\xa6\x6e\x59\x51\x03\x51\x5c\xe4\xf2\xf5\x04\xc8\x98\x22\xbf\x5e\x93\x76\xdf\x6e\x5d\xf8\x81\xa6\xd3\x8e\xcc\x0c\xe6\xcc\x0f\x7d\x6b\xae\x99\xbb\x47\x13\x7b\xa2\x4b\xd6\x39\x09\x9f\x55\xb6\x32\xed\x58\x13\x06\x5e\xcc\x1f\x3c\xdf\xc7\x0b\x93\xf6\x9a\xd9\x15\xaf\xfc\xf2\xc6\xfc\x13\xd4\x07\x9a\x98\xc4\x6f\x9c\x8f\x97\xb4\x1a\x7f\x69\xb0\x10\x7b\x05\x37\xd0\xc1\x7f\xa1\x7f\xee\x08\x26\xff\xff\x16\xfd\x2f\x00\x00\xff\xff\x9b\xf9\xdb\xbe\xa8\x06\x00\x00")

func resKeyPemBytes() ([]byte, error) {
	return bindataRead(
		_resKeyPem,
		"Res/key.pem",
	)
}

func resKeyPem() (*asset, error) {
	bytes, err := resKeyPemBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "Res/key.pem", size: 1704, mode: os.FileMode(420), modTime: time.Unix(1731482605, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _resNodeXIni = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x90\xc1\x6a\x84\x30\x10\x86\xef\xf3\x14\x1e\x8a\x47\x85\x1e\x17\xc2\x9e\x7a\xea\x13\x94\x65\x09\x31\x99\x46\xad\x26\xae\x33\x69\xb6\x94\xbe\x7b\x89\xb1\x28\xd2\xc3\x1e\x02\xc9\x3f\xff\xf7\x31\xe4\x62\xf0\x5d\x85\x81\xaf\x00\x8c\x77\x96\x3d\x15\xa2\xe8\x49\xa6\x47\xd5\x13\x00\x5c\x08\xd5\xac\x5b\x89\xce\x76\x0e\xaf\x00\xd6\x7b\x3b\x60\x21\x8a\x96\x79\xa2\x53\x5d\xc7\x18\xab\x1c\x56\xda\x8f\x75\xee\x9f\x6f\xe2\xe9\xfb\xf5\xe5\xed\xa7\x24\xad\x64\x98\x3e\xc5\x73\x49\x3e\xcc\x1a\xc5\xe0\xb8\xe4\x86\xc4\xcd\xcc\xa7\x71\xd5\x49\x87\x91\x1e\x77\x72\x33\x0a\x17\xd3\x7a\x8d\xea\x4c\x38\x80\x4b\x96\xb9\x73\x34\x2b\x03\x4d\xe7\xec\xb1\xd8\x39\xfb\x9f\x1f\xbe\x54\xeb\xfd\xae\x9c\xe7\xd5\x12\xef\x81\x69\x03\x9c\xc1\xfb\x41\x9f\xc3\xa5\x9f\xae\x2b\x93\xbe\xf6\x0f\x33\x41\x7f\xa4\x63\xfd\x01\xdd\x06\x0b\xbe\x6d\xf6\x1b\x00\x00\xff\xff\xa1\xfe\xf8\xac\xb1\x01\x00\x00")

func resNodeXIniBytes() ([]byte, error) {
	return bindataRead(
		_resNodeXIni,
		"Res/node-x.ini",
	)
}

func resNodeXIni() (*asset, error) {
	bytes, err := resNodeXIniBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "Res/node-x.ini", size: 433, mode: os.FileMode(420), modTime: time.Unix(1717941212, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"Res/cert.pem":       resCertPem,
	"Res/google.js":      resGoogleJs,
	"Res/google_news.js": resGoogle_newsJs,
	"Res/js_text.js":     resJs_textJs,
	"Res/key.pem":        resKeyPem,
	"Res/node-x.ini":     resNodeXIni,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"Res": &bintree{nil, map[string]*bintree{
		"cert.pem":       &bintree{resCertPem, map[string]*bintree{}},
		"google.js":      &bintree{resGoogleJs, map[string]*bintree{}},
		"google_news.js": &bintree{resGoogle_newsJs, map[string]*bintree{}},
		"js_text.js":     &bintree{resJs_textJs, map[string]*bintree{}},
		"key.pem":        &bintree{resKeyPem, map[string]*bintree{}},
		"node-x.ini":     &bintree{resNodeXIni, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
